<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 12.2.1 (20241206.2353)
 -->
<!-- Pages: 1 -->
<svg width="2714pt" height="2101pt"
 viewBox="0.00 0.00 2714.30 2100.80" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 2096.8)">
<polygon fill="white" stroke="none" points="-4,4 -4,-2096.8 2710.3,-2096.8 2710.3,4 -4,4"/>
<!-- longestPalindrome_root -->
<g id="node1" class="node">
<title>longestPalindrome_root</title>
<polygon fill="lightblue" stroke="black" points="1819.18,-2092.8 1617.88,-2092.8 1617.88,-2006.4 1819.18,-2006.4 1819.18,-2092.8"/>
<text text-anchor="middle" x="1718.53" y="-2076.1" font-family="Arial" font-size="10.00">longestPalindrome_root</text>
<text text-anchor="middle" x="1718.53" y="-2040.1" font-family="Arial" font-size="10.00">ROOT</text>
<text text-anchor="middle" x="1718.53" y="-2016.1" font-family="Arial" font-size="10.00">Problem analysis for longestPalindrome</text>
</g>
<!-- longestPalindrome_expand_around_center_step_1 -->
<g id="node2" class="node">
<title>longestPalindrome_expand_around_center_step_1</title>
<polygon fill="moccasin" stroke="black" points="942.05,-1970.4 695,-1970.4 695,-1872 942.05,-1872 942.05,-1970.4"/>
<text text-anchor="middle" x="818.52" y="-1953.7" font-family="Arial" font-size="10.00">longestPalindrome_expand_around_center_step_1</text>
<text text-anchor="middle" x="818.52" y="-1917.7" font-family="Arial" font-size="10.00">HEAD &#45; Step 1 (Expand Around Center)</text>
<text text-anchor="middle" x="818.52" y="-1893.7" font-family="Arial" font-size="10.00">Initialize two pointers, left and right, to the</text>
<text text-anchor="middle" x="818.52" y="-1881.7" font-family="Arial" font-size="10.00">center of the palindrome.</text>
</g>
<!-- longestPalindrome_root&#45;&gt;longestPalindrome_expand_around_center_step_1 -->
<g id="edge10" class="edge">
<title>longestPalindrome_root&#45;&gt;longestPalindrome_expand_around_center_step_1</title>
<path fill="none" stroke="black" d="M1617.47,-2034.41C1454.98,-2011.59 1135.5,-1966.72 953.62,-1941.17"/>
<polygon fill="black" stroke="black" points="954.27,-1937.73 943.88,-1939.81 953.3,-1944.66 954.27,-1937.73"/>
</g>
<!-- longestPalindrome_two_pointers_step_1 -->
<g id="node12" class="node">
<title>longestPalindrome_two_pointers_step_1</title>
<polygon fill="lightyellow" stroke="black" points="1682.18,-1970.4 1474.88,-1970.4 1474.88,-1872 1682.18,-1872 1682.18,-1970.4"/>
<text text-anchor="middle" x="1578.53" y="-1953.7" font-family="Arial" font-size="10.00">longestPalindrome_two_pointers_step_1</text>
<text text-anchor="middle" x="1578.53" y="-1917.7" font-family="Arial" font-size="10.00">HEAD &#45; Step 1 (Two Pointers)</text>
<text text-anchor="middle" x="1578.53" y="-1893.7" font-family="Arial" font-size="10.00">Initialize two pointers, `left` and `right`, to</text>
<text text-anchor="middle" x="1578.53" y="-1881.7" font-family="Arial" font-size="10.00">the middle of the string `s`.</text>
</g>
<!-- longestPalindrome_root&#45;&gt;longestPalindrome_two_pointers_step_1 -->
<g id="edge18" class="edge">
<title>longestPalindrome_root&#45;&gt;longestPalindrome_two_pointers_step_1</title>
<path fill="none" stroke="black" d="M1671.52,-2006.16C1661.61,-1997.22 1651.02,-1987.65 1640.66,-1978.3"/>
<polygon fill="black" stroke="black" points="1643.31,-1975.97 1633.54,-1971.87 1638.62,-1981.17 1643.31,-1975.97"/>
</g>
<!-- longestPalindrome_dynamic_programming_step_1 -->
<g id="node20" class="node">
<title>longestPalindrome_dynamic_programming_step_1</title>
<polygon fill="lightyellow" stroke="black" points="1983.05,-1970.4 1736,-1970.4 1736,-1872 1983.05,-1872 1983.05,-1970.4"/>
<text text-anchor="middle" x="1859.53" y="-1953.7" font-family="Arial" font-size="10.00">longestPalindrome_dynamic_programming_step_1</text>
<text text-anchor="middle" x="1859.53" y="-1917.7" font-family="Arial" font-size="10.00">HEAD &#45; Step 1 (Dynamic Programming)</text>
<text text-anchor="middle" x="1859.53" y="-1893.7" font-family="Arial" font-size="10.00">Create a 2D table `dp` to store whether a</text>
<text text-anchor="middle" x="1859.53" y="-1881.7" font-family="Arial" font-size="10.00">substring is a palindrome or not.</text>
</g>
<!-- longestPalindrome_root&#45;&gt;longestPalindrome_dynamic_programming_step_1 -->
<g id="edge32" class="edge">
<title>longestPalindrome_root&#45;&gt;longestPalindrome_dynamic_programming_step_1</title>
<path fill="none" stroke="black" d="M1765.87,-2006.16C1775.84,-1997.22 1786.51,-1987.65 1796.95,-1978.3"/>
<polygon fill="black" stroke="black" points="1799.01,-1981.15 1804.12,-1971.87 1794.34,-1975.94 1799.01,-1981.15"/>
</g>
<!-- longestPalindrome_expand_around_center_step_1_error_logic_error -->
<g id="node34" class="node">
<title>longestPalindrome_expand_around_center_step_1_error_logic_error</title>
<polygon fill="salmon" stroke="black" points="2323.55,-1964.4 2001.5,-1964.4 2001.5,-1878 2323.55,-1878 2323.55,-1964.4"/>
<text text-anchor="middle" x="2162.53" y="-1947.7" font-family="Arial" font-size="10.00">longestPalindrome_expand_around_center_step_1_error_logic_error</text>
<text text-anchor="middle" x="2162.53" y="-1911.7" font-family="Arial" font-size="10.00">HEAD &#45; Step 1 (Expand Around Center)</text>
<text text-anchor="middle" x="2162.53" y="-1887.7" font-family="Arial" font-size="10.00">Not considering even length palindromes</text>
</g>
<!-- longestPalindrome_root&#45;&gt;longestPalindrome_expand_around_center_step_1_error_logic_error -->
<g id="edge33" class="edge">
<title>longestPalindrome_root&#45;&gt;longestPalindrome_expand_around_center_step_1_error_logic_error</title>
<path fill="none" stroke="black" d="M1819.55,-2019.84C1873.39,-2004.51 1940.88,-1985.3 2001.73,-1967.98"/>
<polygon fill="black" stroke="black" points="2002.49,-1971.4 2011.15,-1965.29 2000.58,-1964.67 2002.49,-1971.4"/>
</g>
<!-- longestPalindrome_expand_around_center_step_2 -->
<g id="node3" class="node">
<title>longestPalindrome_expand_around_center_step_2</title>
<polygon fill="moccasin" stroke="black" points="466.93,-1836 216.12,-1836 216.12,-1713.6 466.93,-1713.6 466.93,-1836"/>
<text text-anchor="middle" x="341.52" y="-1819.3" font-family="Arial" font-size="10.00">longestPalindrome_expand_around_center_step_2</text>
<text text-anchor="middle" x="341.52" y="-1783.3" font-family="Arial" font-size="10.00">Step 2</text>
<text text-anchor="middle" x="341.52" y="-1759.3" font-family="Arial" font-size="10.00">Expand the pointers outward, checking if the</text>
<text text-anchor="middle" x="341.52" y="-1747.3" font-family="Arial" font-size="10.00">characters at the pointers are the same and update</text>
<text text-anchor="middle" x="341.52" y="-1735.3" font-family="Arial" font-size="10.00">the maximum length and the longest palindromic</text>
<text text-anchor="middle" x="341.52" y="-1723.3" font-family="Arial" font-size="10.00">substring.</text>
</g>
<!-- longestPalindrome_expand_around_center_step_1&#45;&gt;longestPalindrome_expand_around_center_step_2 -->
<g id="edge4" class="edge">
<title>longestPalindrome_expand_around_center_step_1&#45;&gt;longestPalindrome_expand_around_center_step_2</title>
<path fill="none" stroke="black" d="M694.73,-1895.51C631.77,-1881.6 554.17,-1862.37 477.9,-1836.7"/>
<polygon fill="black" stroke="black" points="479.18,-1833.44 468.58,-1833.52 476.92,-1840.06 479.18,-1833.44"/>
</g>
<!-- longestPalindrome_expand_around_center_step_2_error_logic_error -->
<g id="node7" class="node">
<title>longestPalindrome_expand_around_center_step_2_error_logic_error</title>
<polygon fill="salmon" stroke="black" points="806.55,-1818 484.5,-1818 484.5,-1731.6 806.55,-1731.6 806.55,-1818"/>
<text text-anchor="middle" x="645.52" y="-1801.3" font-family="Arial" font-size="10.00">longestPalindrome_expand_around_center_step_2_error_logic_error</text>
<text text-anchor="middle" x="645.52" y="-1765.3" font-family="Arial" font-size="10.00">ERROR (Step 2)</text>
<text text-anchor="middle" x="645.52" y="-1741.3" font-family="Arial" font-size="10.00">Not updating the maximum length correctly</text>
</g>
<!-- longestPalindrome_expand_around_center_step_1&#45;&gt;longestPalindrome_expand_around_center_step_2_error_logic_error -->
<g id="edge5" class="edge">
<title>longestPalindrome_expand_around_center_step_1&#45;&gt;longestPalindrome_expand_around_center_step_2_error_logic_error</title>
<path fill="none" stroke="black" d="M760.44,-1871.72C742.64,-1856.86 723.03,-1840.49 705.13,-1825.55"/>
<polygon fill="black" stroke="black" points="707.58,-1823.04 697.66,-1819.32 703.1,-1828.41 707.58,-1823.04"/>
</g>
<!-- longestPalindrome_expand_around_center_step_2_variation_1_step_2 -->
<g id="node8" class="node">
<title>longestPalindrome_expand_around_center_step_2_variation_1_step_2</title>
<polygon fill="lightyellow" stroke="black" points="1158.55,-1824 824.5,-1824 824.5,-1725.6 1158.55,-1725.6 1158.55,-1824"/>
<text text-anchor="middle" x="991.52" y="-1807.3" font-family="Arial" font-size="10.00">longestPalindrome_expand_around_center_step_2_variation_1_step_2</text>
<text text-anchor="middle" x="991.52" y="-1771.3" font-family="Arial" font-size="10.00">Step 2</text>
<text text-anchor="middle" x="991.52" y="-1747.3" font-family="Arial" font-size="10.00">Expand the palindrome while the characters at the</text>
<text text-anchor="middle" x="991.52" y="-1735.3" font-family="Arial" font-size="10.00">left and right pointers are the same.</text>
</g>
<!-- longestPalindrome_expand_around_center_step_1&#45;&gt;longestPalindrome_expand_around_center_step_2_variation_1_step_2 -->
<g id="edge9" class="edge">
<title>longestPalindrome_expand_around_center_step_1&#45;&gt;longestPalindrome_expand_around_center_step_2_variation_1_step_2</title>
<path fill="none" stroke="black" d="M876.61,-1871.72C892.02,-1858.86 908.78,-1844.87 924.61,-1831.65"/>
<polygon fill="black" stroke="black" points="926.7,-1834.47 932.13,-1825.37 922.21,-1829.09 926.7,-1834.47"/>
</g>
<!-- longestPalindrome_expand_around_center_step_3 -->
<g id="node4" class="node">
<title>longestPalindrome_expand_around_center_step_3</title>
<polygon fill="lightyellow" stroke="black" points="292.05,-1677.6 45,-1677.6 45,-1567.2 292.05,-1567.2 292.05,-1677.6"/>
<text text-anchor="middle" x="168.52" y="-1660.9" font-family="Arial" font-size="10.00">longestPalindrome_expand_around_center_step_3</text>
<text text-anchor="middle" x="168.52" y="-1624.9" font-family="Arial" font-size="10.00">Step 3</text>
<text text-anchor="middle" x="168.52" y="-1600.9" font-family="Arial" font-size="10.00">Repeat step 2 until the characters at the pointers</text>
<text text-anchor="middle" x="168.52" y="-1588.9" font-family="Arial" font-size="10.00">are not the same or the pointers are out of the</text>
<text text-anchor="middle" x="168.52" y="-1576.9" font-family="Arial" font-size="10.00">string bounds.</text>
</g>
<!-- longestPalindrome_expand_around_center_step_2&#45;&gt;longestPalindrome_expand_around_center_step_3 -->
<g id="edge2" class="edge">
<title>longestPalindrome_expand_around_center_step_2&#45;&gt;longestPalindrome_expand_around_center_step_3</title>
<path fill="none" stroke="black" d="M272.16,-1713.49C261.47,-1704.21 250.43,-1694.61 239.71,-1685.29"/>
<polygon fill="black" stroke="black" points="242.18,-1682.8 232.34,-1678.88 237.59,-1688.08 242.18,-1682.8"/>
</g>
<!-- longestPalindrome_expand_around_center_step_3_error_logic_error -->
<g id="node6" class="node">
<title>longestPalindrome_expand_around_center_step_3_error_logic_error</title>
<polygon fill="salmon" stroke="black" points="632.55,-1671.6 310.5,-1671.6 310.5,-1573.2 632.55,-1573.2 632.55,-1671.6"/>
<text text-anchor="middle" x="471.52" y="-1654.9" font-family="Arial" font-size="10.00">longestPalindrome_expand_around_center_step_3_error_logic_error</text>
<text text-anchor="middle" x="471.52" y="-1618.9" font-family="Arial" font-size="10.00">ERROR (Step 3)</text>
<text text-anchor="middle" x="471.52" y="-1594.9" font-family="Arial" font-size="10.00">Not iterating over all possible centers of</text>
<text text-anchor="middle" x="471.52" y="-1582.9" font-family="Arial" font-size="10.00">palindrome</text>
</g>
<!-- longestPalindrome_expand_around_center_step_2&#45;&gt;longestPalindrome_expand_around_center_step_3_error_logic_error -->
<g id="edge3" class="edge">
<title>longestPalindrome_expand_around_center_step_2&#45;&gt;longestPalindrome_expand_around_center_step_3_error_logic_error</title>
<path fill="none" stroke="black" d="M393.65,-1713.49C403.13,-1702.53 412.98,-1691.13 422.37,-1680.27"/>
<polygon fill="black" stroke="black" points="424.9,-1682.69 428.79,-1672.84 419.6,-1678.12 424.9,-1682.69"/>
</g>
<!-- longestPalindrome_expand_around_center_step_4 -->
<g id="node5" class="node">
<title>longestPalindrome_expand_around_center_step_4</title>
<polygon fill="palegreen" stroke="black" points="337.05,-1531.2 0,-1531.2 0,-1108.8 337.05,-1108.8 337.05,-1531.2"/>
<text text-anchor="middle" x="168.52" y="-1514.5" font-family="Arial" font-size="10.00">longestPalindrome_expand_around_center_step_4</text>
<text text-anchor="middle" x="168.52" y="-1478.5" font-family="Arial" font-size="10.00">TERMINAL (Step 4)</text>
<text text-anchor="middle" x="168.52" y="-1454.5" font-family="Arial" font-size="10.00">Repeat steps 1&#45;3 for all possible centers of</text>
<text text-anchor="middle" x="168.52" y="-1442.5" font-family="Arial" font-size="10.00">palindrome in the string.</text>
<text text-anchor="middle" x="168.52" y="-1418.5" font-family="Arial" font-size="10.00">CODE:</text>
<text text-anchor="middle" x="168.52" y="-1406.5" font-family="Arial" font-size="10.00">class Solution:</text>
<text text-anchor="middle" x="168.52" y="-1394.5" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;def longestPalindrome(self, s: str) &#45;&gt; str:</text>
<text text-anchor="middle" x="168.52" y="-1382.5" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;def expand_around_center(s, left, right):</text>
<text text-anchor="middle" x="168.52" y="-1370.5" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;while left &gt;= 0 and right &lt; len(s) and s[left] == s[right]:</text>
<text text-anchor="middle" x="168.52" y="-1358.5" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;left &#45;= 1</text>
<text text-anchor="middle" x="168.52" y="-1346.5" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;right += 1</text>
<text text-anchor="middle" x="168.52" y="-1334.5" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return s[left + 1:right]</text>
<text text-anchor="middle" x="168.52" y="-1322.5" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;</text>
<text text-anchor="middle" x="168.52" y="-1310.5" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;longest = &quot;&quot;</text>
<text text-anchor="middle" x="168.52" y="-1298.5" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;for i in range(len(s)):</text>
<text text-anchor="middle" x="168.52" y="-1286.5" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;palindrome1 = expand_around_center(s, i, i) &#160;# odd length</text>
<text text-anchor="middle" x="168.52" y="-1274.5" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;palindrome2 = expand_around_center(s, i, i + 1) &#160;# even length</text>
<text text-anchor="middle" x="168.52" y="-1262.5" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if len(palindrome1) &gt; len(longest):</text>
<text text-anchor="middle" x="168.52" y="-1250.5" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;longest = palindrome1</text>
<text text-anchor="middle" x="168.52" y="-1238.5" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if len(palindrome2) &gt; len(longest):</text>
<text text-anchor="middle" x="168.52" y="-1226.5" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;longest = palindrome2</text>
<text text-anchor="middle" x="168.52" y="-1214.5" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;return longest</text>
<text text-anchor="middle" x="168.52" y="-1190.5" font-family="Arial" font-size="10.00">Time: O(n)</text>
<text text-anchor="middle" x="168.52" y="-1178.5" font-family="Arial" font-size="10.00">Space: O(1)</text>
<text text-anchor="middle" x="168.52" y="-1166.5" font-family="Arial" font-size="10.00">Data structures: string</text>
<text text-anchor="middle" x="168.52" y="-1154.5" font-family="Arial" font-size="10.00">Concepts: iteration, loops, conditional logic,</text>
<text text-anchor="middle" x="168.52" y="-1142.5" font-family="Arial" font-size="10.00">helper functions, return values,</text>
<text text-anchor="middle" x="168.52" y="-1130.5" font-family="Arial" font-size="10.00">comparison, compound assignment,</text>
<text text-anchor="middle" x="168.52" y="-1118.5" font-family="Arial" font-size="10.00">slicing, object&#45;oriented programming</text>
</g>
<!-- longestPalindrome_expand_around_center_step_3&#45;&gt;longestPalindrome_expand_around_center_step_4 -->
<g id="edge1" class="edge">
<title>longestPalindrome_expand_around_center_step_3&#45;&gt;longestPalindrome_expand_around_center_step_4</title>
<path fill="none" stroke="black" d="M168.52,-1567C168.52,-1559.48 168.52,-1551.4 168.52,-1542.93"/>
<polygon fill="black" stroke="black" points="172.03,-1543.09 168.53,-1533.09 165.03,-1543.09 172.03,-1543.09"/>
</g>
<!-- longestPalindrome_expand_around_center_step_2_variation_1_step_3 -->
<g id="node9" class="node">
<title>longestPalindrome_expand_around_center_step_2_variation_1_step_3</title>
<polygon fill="lightyellow" stroke="black" points="1134.55,-1671.6 800.5,-1671.6 800.5,-1573.2 1134.55,-1573.2 1134.55,-1671.6"/>
<text text-anchor="middle" x="967.52" y="-1654.9" font-family="Arial" font-size="10.00">longestPalindrome_expand_around_center_step_2_variation_1_step_3</text>
<text text-anchor="middle" x="967.52" y="-1618.9" font-family="Arial" font-size="10.00">Step 3</text>
<text text-anchor="middle" x="967.52" y="-1594.9" font-family="Arial" font-size="10.00">Update the longest palindromic substring if the</text>
<text text-anchor="middle" x="967.52" y="-1582.9" font-family="Arial" font-size="10.00">current palindrome is longer.</text>
</g>
<!-- longestPalindrome_expand_around_center_step_2_variation_1_step_2&#45;&gt;longestPalindrome_expand_around_center_step_2_variation_1_step_3 -->
<g id="edge8" class="edge">
<title>longestPalindrome_expand_around_center_step_2_variation_1_step_2&#45;&gt;longestPalindrome_expand_around_center_step_2_variation_1_step_3</title>
<path fill="none" stroke="black" d="M983.8,-1725.38C981.65,-1711.9 979.28,-1697.1 977.04,-1683.05"/>
<polygon fill="black" stroke="black" points="980.55,-1682.8 975.52,-1673.48 973.64,-1683.9 980.55,-1682.8"/>
</g>
<!-- longestPalindrome_expand_around_center_step_2_variation_1_step_4 -->
<g id="node10" class="node">
<title>longestPalindrome_expand_around_center_step_2_variation_1_step_4</title>
<polygon fill="lightyellow" stroke="black" points="1129.55,-1369.2 795.5,-1369.2 795.5,-1270.8 1129.55,-1270.8 1129.55,-1369.2"/>
<text text-anchor="middle" x="962.52" y="-1352.5" font-family="Arial" font-size="10.00">longestPalindrome_expand_around_center_step_2_variation_1_step_4</text>
<text text-anchor="middle" x="962.52" y="-1316.5" font-family="Arial" font-size="10.00">Step 4</text>
<text text-anchor="middle" x="962.52" y="-1292.5" font-family="Arial" font-size="10.00">Iterate through the string to consider every</text>
<text text-anchor="middle" x="962.52" y="-1280.5" font-family="Arial" font-size="10.00">character as the center of a potential palindrome.</text>
</g>
<!-- longestPalindrome_expand_around_center_step_2_variation_1_step_3&#45;&gt;longestPalindrome_expand_around_center_step_2_variation_1_step_4 -->
<g id="edge7" class="edge">
<title>longestPalindrome_expand_around_center_step_2_variation_1_step_3&#45;&gt;longestPalindrome_expand_around_center_step_2_variation_1_step_4</title>
<path fill="none" stroke="black" d="M966.72,-1572.8C965.84,-1520.45 964.46,-1437.09 963.52,-1380.77"/>
<polygon fill="black" stroke="black" points="967.02,-1380.98 963.36,-1371.04 960.02,-1381.1 967.02,-1380.98"/>
</g>
<!-- longestPalindrome_expand_around_center_step_2_variation_1_step_5 -->
<g id="node11" class="node">
<title>longestPalindrome_expand_around_center_step_2_variation_1_step_5</title>
<polygon fill="palegreen" stroke="black" points="1150.17,-1048.8 762.88,-1048.8 762.88,-614.4 1150.17,-614.4 1150.17,-1048.8"/>
<text text-anchor="middle" x="956.52" y="-1032.1" font-family="Arial" font-size="10.00">longestPalindrome_expand_around_center_step_2_variation_1_step_5</text>
<text text-anchor="middle" x="956.52" y="-996.1" font-family="Arial" font-size="10.00">TERMINAL (Step 5)</text>
<text text-anchor="middle" x="956.52" y="-972.1" font-family="Arial" font-size="10.00">Return the longest palindromic substring found.</text>
<text text-anchor="middle" x="956.52" y="-948.1" font-family="Arial" font-size="10.00">CODE:</text>
<text text-anchor="middle" x="956.52" y="-936.1" font-family="Arial" font-size="10.00">class Solution:</text>
<text text-anchor="middle" x="956.52" y="-924.1" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;def longestPalindrome(self, s: str) &#45;&gt; str:</text>
<text text-anchor="middle" x="956.52" y="-912.1" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;def expand_around_center(s, left, right):</text>
<text text-anchor="middle" x="956.52" y="-900.1" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;left = left</text>
<text text-anchor="middle" x="956.52" y="-888.1" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;right = right</text>
<text text-anchor="middle" x="956.52" y="-876.1" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;while left &gt;= 0 and right &lt; len(s) and s[left] == s[right]:</text>
<text text-anchor="middle" x="956.52" y="-864.1" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;left &#45;= 1</text>
<text text-anchor="middle" x="956.52" y="-852.1" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;right += 1</text>
<text text-anchor="middle" x="956.52" y="-840.1" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return s[left + 1:right]</text>
<text text-anchor="middle" x="956.52" y="-828.1" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;</text>
<text text-anchor="middle" x="956.52" y="-816.1" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;longest_palindrome = &quot;&quot;</text>
<text text-anchor="middle" x="956.52" y="-804.1" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;for i in range(len(s)):</text>
<text text-anchor="middle" x="956.52" y="-792.1" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;palindrome1 = expand_around_center(s, i, i) &#160;# odd length palindrome</text>
<text text-anchor="middle" x="956.52" y="-780.1" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;palindrome2 = expand_around_center(s, i, i + 1) &#160;# even length palindrome</text>
<text text-anchor="middle" x="956.52" y="-768.1" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if len(palindrome1) &gt; len(longest_palindrome):</text>
<text text-anchor="middle" x="956.52" y="-756.1" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;longest_palindrome = palindrome1</text>
<text text-anchor="middle" x="956.52" y="-744.1" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if len(palindrome2) &gt; len(longest_palindrome):</text>
<text text-anchor="middle" x="956.52" y="-732.1" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;longest_palindrome = palindrome2</text>
<text text-anchor="middle" x="956.52" y="-720.1" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;return longest_palindrome</text>
<text text-anchor="middle" x="956.52" y="-696.1" font-family="Arial" font-size="10.00">Time: O(n)</text>
<text text-anchor="middle" x="956.52" y="-684.1" font-family="Arial" font-size="10.00">Space: O(1)</text>
<text text-anchor="middle" x="956.52" y="-672.1" font-family="Arial" font-size="10.00">Data structures: string</text>
<text text-anchor="middle" x="956.52" y="-660.1" font-family="Arial" font-size="10.00">Concepts: iteration, loops, conditional logic,</text>
<text text-anchor="middle" x="956.52" y="-648.1" font-family="Arial" font-size="10.00">helper functions, return values,</text>
<text text-anchor="middle" x="956.52" y="-636.1" font-family="Arial" font-size="10.00">comparison, compound assignment,</text>
<text text-anchor="middle" x="956.52" y="-624.1" font-family="Arial" font-size="10.00">slicing, object&#45;oriented programming</text>
</g>
<!-- longestPalindrome_expand_around_center_step_2_variation_1_step_4&#45;&gt;longestPalindrome_expand_around_center_step_2_variation_1_step_5 -->
<g id="edge6" class="edge">
<title>longestPalindrome_expand_around_center_step_2_variation_1_step_4&#45;&gt;longestPalindrome_expand_around_center_step_2_variation_1_step_5</title>
<path fill="none" stroke="black" d="M961.93,-1270.58C961.31,-1220.73 960.31,-1139.35 959.33,-1060.18"/>
<polygon fill="black" stroke="black" points="962.84,-1060.5 959.21,-1050.55 955.84,-1060.59 962.84,-1060.5"/>
</g>
<!-- longestPalindrome_two_pointers_step_2 -->
<g id="node13" class="node">
<title>longestPalindrome_two_pointers_step_2</title>
<polygon fill="moccasin" stroke="black" points="1420.8,-1830 1178.25,-1830 1178.25,-1719.6 1420.8,-1719.6 1420.8,-1830"/>
<text text-anchor="middle" x="1299.53" y="-1813.3" font-family="Arial" font-size="10.00">longestPalindrome_two_pointers_step_2</text>
<text text-anchor="middle" x="1299.53" y="-1777.3" font-family="Arial" font-size="10.00">Step 2</text>
<text text-anchor="middle" x="1299.53" y="-1753.3" font-family="Arial" font-size="10.00">Expand the `left` and `right` pointers outwards to</text>
<text text-anchor="middle" x="1299.53" y="-1741.3" font-family="Arial" font-size="10.00">find the longest palindromic substring centered at</text>
<text text-anchor="middle" x="1299.53" y="-1729.3" font-family="Arial" font-size="10.00">the current position.</text>
</g>
<!-- longestPalindrome_two_pointers_step_1&#45;&gt;longestPalindrome_two_pointers_step_2 -->
<g id="edge16" class="edge">
<title>longestPalindrome_two_pointers_step_1&#45;&gt;longestPalindrome_two_pointers_step_2</title>
<path fill="none" stroke="black" d="M1484.46,-1871.51C1462.27,-1860.03 1438.36,-1847.66 1415.34,-1835.74"/>
<polygon fill="black" stroke="black" points="1417.02,-1832.67 1406.53,-1831.18 1413.81,-1838.89 1417.02,-1832.67"/>
</g>
<!-- longestPalindrome_two_pointers_step_2_error_logic_error -->
<g id="node19" class="node">
<title>longestPalindrome_two_pointers_step_2_error_logic_error</title>
<polygon fill="salmon" stroke="black" points="1718.18,-1836 1438.88,-1836 1438.88,-1713.6 1718.18,-1713.6 1718.18,-1836"/>
<text text-anchor="middle" x="1578.53" y="-1819.3" font-family="Arial" font-size="10.00">longestPalindrome_two_pointers_step_2_error_logic_error</text>
<text text-anchor="middle" x="1578.53" y="-1783.3" font-family="Arial" font-size="10.00">ERROR (Step 2)</text>
<text text-anchor="middle" x="1578.53" y="-1759.3" font-family="Arial" font-size="10.00">Failing to check for even length</text>
<text text-anchor="middle" x="1578.53" y="-1747.3" font-family="Arial" font-size="10.00">palindromes</text>
<text text-anchor="middle" x="1578.53" y="-1735.3" font-family="Arial" font-size="10.00">(e.g., &#39;abba&#39;) by only considering</text>
<text text-anchor="middle" x="1578.53" y="-1723.3" font-family="Arial" font-size="10.00">odd length palindromes.</text>
</g>
<!-- longestPalindrome_two_pointers_step_1&#45;&gt;longestPalindrome_two_pointers_step_2_error_logic_error -->
<g id="edge17" class="edge">
<title>longestPalindrome_two_pointers_step_1&#45;&gt;longestPalindrome_two_pointers_step_2_error_logic_error</title>
<path fill="none" stroke="black" d="M1578.53,-1871.72C1578.53,-1864.03 1578.53,-1855.94 1578.53,-1847.86"/>
<polygon fill="black" stroke="black" points="1582.03,-1847.98 1578.53,-1837.98 1575.03,-1847.98 1582.03,-1847.98"/>
</g>
<!-- longestPalindrome_two_pointers_step_3 -->
<g id="node14" class="node">
<title>longestPalindrome_two_pointers_step_3</title>
<polygon fill="moccasin" stroke="black" points="1410.93,-1671.6 1172.12,-1671.6 1172.12,-1573.2 1410.93,-1573.2 1410.93,-1671.6"/>
<text text-anchor="middle" x="1291.53" y="-1654.9" font-family="Arial" font-size="10.00">longestPalindrome_two_pointers_step_3</text>
<text text-anchor="middle" x="1291.53" y="-1618.9" font-family="Arial" font-size="10.00">Step 3</text>
<text text-anchor="middle" x="1291.53" y="-1594.9" font-family="Arial" font-size="10.00">Store the longest palindromic substring found so</text>
<text text-anchor="middle" x="1291.53" y="-1582.9" font-family="Arial" font-size="10.00">far in the `res` variable.</text>
</g>
<!-- longestPalindrome_two_pointers_step_2&#45;&gt;longestPalindrome_two_pointers_step_3 -->
<g id="edge14" class="edge">
<title>longestPalindrome_two_pointers_step_2&#45;&gt;longestPalindrome_two_pointers_step_3</title>
<path fill="none" stroke="black" d="M1296.64,-1719.5C1296.01,-1707.64 1295.34,-1695.03 1294.69,-1682.98"/>
<polygon fill="black" stroke="black" points="1298.2,-1682.95 1294.17,-1673.15 1291.21,-1683.32 1298.2,-1682.95"/>
</g>
<!-- longestPalindrome_two_pointers_step_3_error_update_error -->
<g id="node18" class="node">
<title>longestPalindrome_two_pointers_step_3_error_update_error</title>
<polygon fill="salmon" stroke="black" points="1717.68,-1677.6 1429.38,-1677.6 1429.38,-1567.2 1717.68,-1567.2 1717.68,-1677.6"/>
<text text-anchor="middle" x="1573.53" y="-1660.9" font-family="Arial" font-size="10.00">longestPalindrome_two_pointers_step_3_error_update_error</text>
<text text-anchor="middle" x="1573.53" y="-1624.9" font-family="Arial" font-size="10.00">ERROR (Step 3)</text>
<text text-anchor="middle" x="1573.53" y="-1600.9" font-family="Arial" font-size="10.00">Not updating the &#39;res&#39; variable correctly</text>
<text text-anchor="middle" x="1573.53" y="-1588.9" font-family="Arial" font-size="10.00">when a</text>
<text text-anchor="middle" x="1573.53" y="-1576.9" font-family="Arial" font-size="10.00">longer palindromic substring is found.</text>
</g>
<!-- longestPalindrome_two_pointers_step_2&#45;&gt;longestPalindrome_two_pointers_step_3_error_update_error -->
<g id="edge15" class="edge">
<title>longestPalindrome_two_pointers_step_2&#45;&gt;longestPalindrome_two_pointers_step_3_error_update_error</title>
<path fill="none" stroke="black" d="M1398.83,-1719.29C1420.08,-1707.63 1442.64,-1695.24 1464.25,-1683.38"/>
<polygon fill="black" stroke="black" points="1465.69,-1686.59 1472.77,-1678.71 1462.32,-1680.45 1465.69,-1686.59"/>
</g>
<!-- longestPalindrome_two_pointers_step_4 -->
<g id="node15" class="node">
<title>longestPalindrome_two_pointers_step_4</title>
<polygon fill="moccasin" stroke="black" points="1404.18,-1369.2 1178.88,-1369.2 1178.88,-1270.8 1404.18,-1270.8 1404.18,-1369.2"/>
<text text-anchor="middle" x="1291.53" y="-1352.5" font-family="Arial" font-size="10.00">longestPalindrome_two_pointers_step_4</text>
<text text-anchor="middle" x="1291.53" y="-1316.5" font-family="Arial" font-size="10.00">Step 4</text>
<text text-anchor="middle" x="1291.53" y="-1292.5" font-family="Arial" font-size="10.00">Move the `left` and `right` pointers to the next</text>
<text text-anchor="middle" x="1291.53" y="-1280.5" font-family="Arial" font-size="10.00">position in the string `s`.</text>
</g>
<!-- longestPalindrome_two_pointers_step_3&#45;&gt;longestPalindrome_two_pointers_step_4 -->
<g id="edge12" class="edge">
<title>longestPalindrome_two_pointers_step_3&#45;&gt;longestPalindrome_two_pointers_step_4</title>
<path fill="none" stroke="black" d="M1291.53,-1572.8C1291.53,-1520.45 1291.53,-1437.09 1291.53,-1380.77"/>
<polygon fill="black" stroke="black" points="1295.03,-1381.04 1291.53,-1371.04 1288.03,-1381.04 1295.03,-1381.04"/>
</g>
<!-- longestPalindrome_two_pointers_step_4_error_loop_error -->
<g id="node17" class="node">
<title>longestPalindrome_two_pointers_step_4_error_loop_error</title>
<polygon fill="salmon" stroke="black" points="1699.05,-1375.2 1422,-1375.2 1422,-1264.8 1699.05,-1264.8 1699.05,-1375.2"/>
<text text-anchor="middle" x="1560.53" y="-1358.5" font-family="Arial" font-size="10.00">longestPalindrome_two_pointers_step_4_error_loop_error</text>
<text text-anchor="middle" x="1560.53" y="-1322.5" font-family="Arial" font-size="10.00">ERROR (Step 4)</text>
<text text-anchor="middle" x="1560.53" y="-1298.5" font-family="Arial" font-size="10.00">Not incrementing the &#39;i&#39; variable</text>
<text text-anchor="middle" x="1560.53" y="-1286.5" font-family="Arial" font-size="10.00">correctly</text>
<text text-anchor="middle" x="1560.53" y="-1274.5" font-family="Arial" font-size="10.00">causing an infinite loop.</text>
</g>
<!-- longestPalindrome_two_pointers_step_3&#45;&gt;longestPalindrome_two_pointers_step_4_error_loop_error -->
<g id="edge13" class="edge">
<title>longestPalindrome_two_pointers_step_3&#45;&gt;longestPalindrome_two_pointers_step_4_error_loop_error</title>
<path fill="none" stroke="black" d="M1365.34,-1572.81C1382.05,-1560.22 1399.1,-1546.01 1413.53,-1531.2 1456.57,-1487.01 1496.07,-1429.1 1523.26,-1385.25"/>
<polygon fill="black" stroke="black" points="1526.17,-1387.2 1528.42,-1376.85 1520.21,-1383.54 1526.17,-1387.2"/>
</g>
<!-- longestPalindrome_two_pointers_step_5 -->
<g id="node16" class="node">
<title>longestPalindrome_two_pointers_step_5</title>
<polygon fill="palegreen" stroke="black" points="1434.8,-1042.8 1168.25,-1042.8 1168.25,-620.4 1434.8,-620.4 1434.8,-1042.8"/>
<text text-anchor="middle" x="1301.53" y="-1026.1" font-family="Arial" font-size="10.00">longestPalindrome_two_pointers_step_5</text>
<text text-anchor="middle" x="1301.53" y="-990.1" font-family="Arial" font-size="10.00">TERMINAL (Step 5)</text>
<text text-anchor="middle" x="1301.53" y="-966.1" font-family="Arial" font-size="10.00">Repeat steps 2&#45;4 until the entire string `s` has</text>
<text text-anchor="middle" x="1301.53" y="-954.1" font-family="Arial" font-size="10.00">been processed.</text>
<text text-anchor="middle" x="1301.53" y="-930.1" font-family="Arial" font-size="10.00">CODE:</text>
<text text-anchor="middle" x="1301.53" y="-918.1" font-family="Arial" font-size="10.00">class Solution:</text>
<text text-anchor="middle" x="1301.53" y="-906.1" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;def longestPalindrome(self, s: str) &#45;&gt; str:</text>
<text text-anchor="middle" x="1301.53" y="-894.1" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;res = &quot;&quot;</text>
<text text-anchor="middle" x="1301.53" y="-882.1" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;for i in range(len(s)):</text>
<text text-anchor="middle" x="1301.53" y="-870.1" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;tmp = self.helper(s, i, i)</text>
<text text-anchor="middle" x="1301.53" y="-858.1" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if len(tmp) &gt; len(res):</text>
<text text-anchor="middle" x="1301.53" y="-846.1" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;res = tmp</text>
<text text-anchor="middle" x="1301.53" y="-834.1" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;tmp = self.helper(s, i, i+1)</text>
<text text-anchor="middle" x="1301.53" y="-822.1" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if len(tmp) &gt; len(res):</text>
<text text-anchor="middle" x="1301.53" y="-810.1" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;res = tmp</text>
<text text-anchor="middle" x="1301.53" y="-798.1" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;return res</text>
<text text-anchor="middle" x="1301.53" y="-774.1" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;def helper(self, s, l, right):</text>
<text text-anchor="middle" x="1301.53" y="-762.1" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;while l &gt;= 0 and right &lt; len(s) and s[l] == s[right]:</text>
<text text-anchor="middle" x="1301.53" y="-750.1" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;l &#45;= 1</text>
<text text-anchor="middle" x="1301.53" y="-738.1" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;right += 1</text>
<text text-anchor="middle" x="1301.53" y="-726.1" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;return s[l+1:right]</text>
<text text-anchor="middle" x="1301.53" y="-702.1" font-family="Arial" font-size="10.00">Time: O(n)</text>
<text text-anchor="middle" x="1301.53" y="-690.1" font-family="Arial" font-size="10.00">Space: O(1)</text>
<text text-anchor="middle" x="1301.53" y="-678.1" font-family="Arial" font-size="10.00">Data structures: string</text>
<text text-anchor="middle" x="1301.53" y="-666.1" font-family="Arial" font-size="10.00">Concepts: iteration, loops, conditional logic,</text>
<text text-anchor="middle" x="1301.53" y="-654.1" font-family="Arial" font-size="10.00">helper functions, return values,</text>
<text text-anchor="middle" x="1301.53" y="-642.1" font-family="Arial" font-size="10.00">comparison, compound assignment,</text>
<text text-anchor="middle" x="1301.53" y="-630.1" font-family="Arial" font-size="10.00">slicing, object&#45;oriented programming</text>
</g>
<!-- longestPalindrome_two_pointers_step_4&#45;&gt;longestPalindrome_two_pointers_step_5 -->
<g id="edge11" class="edge">
<title>longestPalindrome_two_pointers_step_4&#45;&gt;longestPalindrome_two_pointers_step_5</title>
<path fill="none" stroke="black" d="M1292.52,-1270.58C1293.57,-1219.52 1295.3,-1135.4 1296.96,-1054.45"/>
<polygon fill="black" stroke="black" points="1300.46,-1054.64 1297.17,-1044.57 1293.46,-1054.49 1300.46,-1054.64"/>
</g>
<!-- longestPalindrome_dynamic_programming_step_2 -->
<g id="node21" class="node">
<title>longestPalindrome_dynamic_programming_step_2</title>
<polygon fill="moccasin" stroke="black" points="1983.05,-1830 1736,-1830 1736,-1719.6 1983.05,-1719.6 1983.05,-1830"/>
<text text-anchor="middle" x="1859.53" y="-1813.3" font-family="Arial" font-size="10.00">longestPalindrome_dynamic_programming_step_2</text>
<text text-anchor="middle" x="1859.53" y="-1777.3" font-family="Arial" font-size="10.00">Step 2</text>
<text text-anchor="middle" x="1859.53" y="-1753.3" font-family="Arial" font-size="10.00">Initialize the table `dp` with False, and set the</text>
<text text-anchor="middle" x="1859.53" y="-1741.3" font-family="Arial" font-size="10.00">diagonal elements to True since a single character</text>
<text text-anchor="middle" x="1859.53" y="-1729.3" font-family="Arial" font-size="10.00">is a palindrome.</text>
</g>
<!-- longestPalindrome_dynamic_programming_step_1&#45;&gt;longestPalindrome_dynamic_programming_step_2 -->
<g id="edge25" class="edge">
<title>longestPalindrome_dynamic_programming_step_1&#45;&gt;longestPalindrome_dynamic_programming_step_2</title>
<path fill="none" stroke="black" d="M1859.53,-1871.72C1859.53,-1862.07 1859.53,-1851.79 1859.53,-1841.68"/>
<polygon fill="black" stroke="black" points="1863.03,-1841.89 1859.53,-1831.89 1856.03,-1841.89 1863.03,-1841.89"/>
</g>
<!-- longestPalindrome_dynamic_programming_step_2_error_initialization_error -->
<g id="node28" class="node">
<title>longestPalindrome_dynamic_programming_step_2_error_initialization_error</title>
<polygon fill="salmon" stroke="black" points="2353.93,-1818 2001.12,-1818 2001.12,-1731.6 2353.93,-1731.6 2353.93,-1818"/>
<text text-anchor="middle" x="2177.53" y="-1801.3" font-family="Arial" font-size="10.00">longestPalindrome_dynamic_programming_step_2_error_initialization_error</text>
<text text-anchor="middle" x="2177.53" y="-1765.3" font-family="Arial" font-size="10.00">ERROR (Step 2)</text>
<text text-anchor="middle" x="2177.53" y="-1741.3" font-family="Arial" font-size="10.00">Initializing the diagonal elements with False</text>
</g>
<!-- longestPalindrome_dynamic_programming_step_1&#45;&gt;longestPalindrome_dynamic_programming_step_2_error_initialization_error -->
<g id="edge26" class="edge">
<title>longestPalindrome_dynamic_programming_step_1&#45;&gt;longestPalindrome_dynamic_programming_step_2_error_initialization_error</title>
<path fill="none" stroke="black" d="M1966.74,-1871.51C2001.06,-1855.93 2038.98,-1838.71 2073.1,-1823.22"/>
<polygon fill="black" stroke="black" points="2074.52,-1826.42 2082.18,-1819.1 2071.62,-1820.04 2074.52,-1826.42"/>
</g>
<!-- longestPalindrome_dynamic_programming_step_2_variation_1_step_2 -->
<g id="node29" class="node">
<title>longestPalindrome_dynamic_programming_step_2_variation_1_step_2</title>
<polygon fill="lightyellow" stroke="black" points="2705.55,-1824 2371.5,-1824 2371.5,-1725.6 2705.55,-1725.6 2705.55,-1824"/>
<text text-anchor="middle" x="2538.53" y="-1807.3" font-family="Arial" font-size="10.00">longestPalindrome_dynamic_programming_step_2_variation_1_step_2</text>
<text text-anchor="middle" x="2538.53" y="-1771.3" font-family="Arial" font-size="10.00">Step 2</text>
<text text-anchor="middle" x="2538.53" y="-1747.3" font-family="Arial" font-size="10.00">Initialize all substrings with one character as</text>
<text text-anchor="middle" x="2538.53" y="-1735.3" font-family="Arial" font-size="10.00">palindromes.</text>
</g>
<!-- longestPalindrome_dynamic_programming_step_1&#45;&gt;longestPalindrome_dynamic_programming_step_2_variation_1_step_2 -->
<g id="edge31" class="edge">
<title>longestPalindrome_dynamic_programming_step_1&#45;&gt;longestPalindrome_dynamic_programming_step_2_variation_1_step_2</title>
<path fill="none" stroke="black" d="M1983.48,-1874.17C1986.51,-1873.4 1989.53,-1872.68 1992.53,-1872 2153.68,-1835.57 2201.05,-1870.97 2362.53,-1836 2373.65,-1833.59 2385.04,-1830.71 2396.42,-1827.52"/>
<polygon fill="black" stroke="black" points="2397.23,-1830.93 2405.87,-1824.8 2395.29,-1824.2 2397.23,-1830.93"/>
</g>
<!-- longestPalindrome_dynamic_programming_step_3 -->
<g id="node22" class="node">
<title>longestPalindrome_dynamic_programming_step_3</title>
<polygon fill="moccasin" stroke="black" points="1983.05,-1677.6 1736,-1677.6 1736,-1567.2 1983.05,-1567.2 1983.05,-1677.6"/>
<text text-anchor="middle" x="1859.53" y="-1660.9" font-family="Arial" font-size="10.00">longestPalindrome_dynamic_programming_step_3</text>
<text text-anchor="middle" x="1859.53" y="-1624.9" font-family="Arial" font-size="10.00">Step 3</text>
<text text-anchor="middle" x="1859.53" y="-1600.9" font-family="Arial" font-size="10.00">Fill the table `dp` in a bottom&#45;up manner,</text>
<text text-anchor="middle" x="1859.53" y="-1588.9" font-family="Arial" font-size="10.00">checking for substrings of length 2 and then 3,</text>
<text text-anchor="middle" x="1859.53" y="-1576.9" font-family="Arial" font-size="10.00">and so on.</text>
</g>
<!-- longestPalindrome_dynamic_programming_step_2&#45;&gt;longestPalindrome_dynamic_programming_step_3 -->
<g id="edge23" class="edge">
<title>longestPalindrome_dynamic_programming_step_2&#45;&gt;longestPalindrome_dynamic_programming_step_3</title>
<path fill="none" stroke="black" d="M1859.53,-1719.5C1859.53,-1709.66 1859.53,-1699.3 1859.53,-1689.17"/>
<polygon fill="black" stroke="black" points="1863.03,-1689.38 1859.53,-1679.38 1856.03,-1689.38 1863.03,-1689.38"/>
</g>
<!-- longestPalindrome_dynamic_programming_step_3_error_logic_error -->
<g id="node27" class="node">
<title>longestPalindrome_dynamic_programming_step_3_error_logic_error</title>
<polygon fill="salmon" stroke="black" points="2323.55,-1665.6 2001.5,-1665.6 2001.5,-1579.2 2323.55,-1579.2 2323.55,-1665.6"/>
<text text-anchor="middle" x="2162.53" y="-1648.9" font-family="Arial" font-size="10.00">longestPalindrome_dynamic_programming_step_3_error_logic_error</text>
<text text-anchor="middle" x="2162.53" y="-1612.9" font-family="Arial" font-size="10.00">ERROR (Step 3)</text>
<text text-anchor="middle" x="2162.53" y="-1588.9" font-family="Arial" font-size="10.00">Not checking the case when length equals 2</text>
</g>
<!-- longestPalindrome_dynamic_programming_step_2&#45;&gt;longestPalindrome_dynamic_programming_step_3_error_logic_error -->
<g id="edge24" class="edge">
<title>longestPalindrome_dynamic_programming_step_2&#45;&gt;longestPalindrome_dynamic_programming_step_3_error_logic_error</title>
<path fill="none" stroke="black" d="M1969.34,-1719.29C2001.28,-1703.44 2035.9,-1686.25 2066.9,-1670.87"/>
<polygon fill="black" stroke="black" points="2068.07,-1674.19 2075.47,-1666.61 2064.95,-1667.92 2068.07,-1674.19"/>
</g>
<!-- longestPalindrome_dynamic_programming_step_4 -->
<g id="node23" class="node">
<title>longestPalindrome_dynamic_programming_step_4</title>
<polygon fill="moccasin" stroke="black" points="1974.05,-1369.2 1727,-1369.2 1727,-1270.8 1974.05,-1270.8 1974.05,-1369.2"/>
<text text-anchor="middle" x="1850.53" y="-1352.5" font-family="Arial" font-size="10.00">longestPalindrome_dynamic_programming_step_4</text>
<text text-anchor="middle" x="1850.53" y="-1316.5" font-family="Arial" font-size="10.00">Step 4</text>
<text text-anchor="middle" x="1850.53" y="-1292.5" font-family="Arial" font-size="10.00">For each substring, check if it&#39;s equal to its</text>
<text text-anchor="middle" x="1850.53" y="-1280.5" font-family="Arial" font-size="10.00">reverse, and update the table `dp` accordingly.</text>
</g>
<!-- longestPalindrome_dynamic_programming_step_3&#45;&gt;longestPalindrome_dynamic_programming_step_4 -->
<g id="edge21" class="edge">
<title>longestPalindrome_dynamic_programming_step_3&#45;&gt;longestPalindrome_dynamic_programming_step_4</title>
<path fill="none" stroke="black" d="M1857.9,-1567C1856.32,-1514.44 1853.94,-1435.01 1852.31,-1380.72"/>
<polygon fill="black" stroke="black" points="1855.82,-1380.94 1852.02,-1371.05 1848.83,-1381.15 1855.82,-1380.94"/>
</g>
<!-- longestPalindrome_dynamic_programming_step_4_error_logic_error -->
<g id="node26" class="node">
<title>longestPalindrome_dynamic_programming_step_4_error_logic_error</title>
<polygon fill="salmon" stroke="black" points="2314.55,-1369.2 1992.5,-1369.2 1992.5,-1270.8 2314.55,-1270.8 2314.55,-1369.2"/>
<text text-anchor="middle" x="2153.53" y="-1352.5" font-family="Arial" font-size="10.00">longestPalindrome_dynamic_programming_step_4_error_logic_error</text>
<text text-anchor="middle" x="2153.53" y="-1316.5" font-family="Arial" font-size="10.00">ERROR (Step 4)</text>
<text text-anchor="middle" x="2153.53" y="-1292.5" font-family="Arial" font-size="10.00">Updating longest and l variables only when</text>
<text text-anchor="middle" x="2153.53" y="-1280.5" font-family="Arial" font-size="10.00">dp[i][j] is True</text>
</g>
<!-- longestPalindrome_dynamic_programming_step_3&#45;&gt;longestPalindrome_dynamic_programming_step_4_error_logic_error -->
<g id="edge22" class="edge">
<title>longestPalindrome_dynamic_programming_step_3&#45;&gt;longestPalindrome_dynamic_programming_step_4_error_logic_error</title>
<path fill="none" stroke="black" d="M1941.02,-1566.84C1955.72,-1555.7 1970.5,-1543.58 1983.53,-1531.2 2032.92,-1484.27 2080.96,-1422.97 2113.3,-1378.69"/>
<polygon fill="black" stroke="black" points="2116.03,-1380.88 2119.07,-1370.73 2110.37,-1376.77 2116.03,-1380.88"/>
</g>
<!-- longestPalindrome_dynamic_programming_step_5 -->
<g id="node24" class="node">
<title>longestPalindrome_dynamic_programming_step_5</title>
<polygon fill="palegreen" stroke="black" points="1828.05,-1072.8 1581,-1072.8 1581,-590.4 1828.05,-590.4 1828.05,-1072.8"/>
<text text-anchor="middle" x="1704.53" y="-1056.1" font-family="Arial" font-size="10.00">longestPalindrome_dynamic_programming_step_5</text>
<text text-anchor="middle" x="1704.53" y="-1020.1" font-family="Arial" font-size="10.00">TERMINAL (Step 5)</text>
<text text-anchor="middle" x="1704.53" y="-996.1" font-family="Arial" font-size="10.00">Use the table `dp` to find the longest palindromic</text>
<text text-anchor="middle" x="1704.53" y="-984.1" font-family="Arial" font-size="10.00">substring.</text>
<text text-anchor="middle" x="1704.53" y="-960.1" font-family="Arial" font-size="10.00">CODE:</text>
<text text-anchor="middle" x="1704.53" y="-948.1" font-family="Arial" font-size="10.00">class Solution:</text>
<text text-anchor="middle" x="1704.53" y="-936.1" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;def longestPalindrome(self, s: str) &#45;&gt; str:</text>
<text text-anchor="middle" x="1704.53" y="-924.1" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;n = len(s)</text>
<text text-anchor="middle" x="1704.53" y="-912.1" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;dp = [[False] * n for _ in range(n)]</text>
<text text-anchor="middle" x="1704.53" y="-900.1" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;longest, l = &quot;&quot;, 0</text>
<text text-anchor="middle" x="1704.53" y="-888.1" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;</text>
<text text-anchor="middle" x="1704.53" y="-876.1" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;for i in range(n):</text>
<text text-anchor="middle" x="1704.53" y="-864.1" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;dp[i][i] = True</text>
<text text-anchor="middle" x="1704.53" y="-852.1" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;longest, l = s[i], 1</text>
<text text-anchor="middle" x="1704.53" y="-840.1" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</text>
<text text-anchor="middle" x="1704.53" y="-828.1" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;for i in range(n &#45; 1)[::&#45;1]:</text>
<text text-anchor="middle" x="1704.53" y="-816.1" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if s[i] == s[i + 1]:</text>
<text text-anchor="middle" x="1704.53" y="-804.1" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;dp[i][i + 1] = True</text>
<text text-anchor="middle" x="1704.53" y="-792.1" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;longest, l = s[i:i + 2], 2</text>
<text text-anchor="middle" x="1704.53" y="-780.1" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</text>
<text text-anchor="middle" x="1704.53" y="-768.1" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;for length in range(3, n + 1):</text>
<text text-anchor="middle" x="1704.53" y="-756.1" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for i in range(n &#45; length + 1)[::&#45;1]:</text>
<text text-anchor="middle" x="1704.53" y="-744.1" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;j = i + length &#45; 1</text>
<text text-anchor="middle" x="1704.53" y="-732.1" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if s[i] == s[j] and dp[i + 1][j &#45; 1]:</text>
<text text-anchor="middle" x="1704.53" y="-720.1" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;dp[i][j] = True</text>
<text text-anchor="middle" x="1704.53" y="-708.1" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;longest, l = s[i:j + 1], length</text>
<text text-anchor="middle" x="1704.53" y="-696.1" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</text>
<text text-anchor="middle" x="1704.53" y="-684.1" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;return longest</text>
<text text-anchor="middle" x="1704.53" y="-660.1" font-family="Arial" font-size="10.00">Time: O(n²)</text>
<text text-anchor="middle" x="1704.53" y="-648.1" font-family="Arial" font-size="10.00">Space: O(1)</text>
<text text-anchor="middle" x="1704.53" y="-636.1" font-family="Arial" font-size="10.00">Data structures: string</text>
<text text-anchor="middle" x="1704.53" y="-624.1" font-family="Arial" font-size="10.00">Concepts: iteration, conditional logic, return</text>
<text text-anchor="middle" x="1704.53" y="-612.1" font-family="Arial" font-size="10.00">values, comparison, slicing, object&#45;</text>
<text text-anchor="middle" x="1704.53" y="-600.1" font-family="Arial" font-size="10.00">oriented programming</text>
</g>
<!-- longestPalindrome_dynamic_programming_step_4&#45;&gt;longestPalindrome_dynamic_programming_step_5 -->
<g id="edge19" class="edge">
<title>longestPalindrome_dynamic_programming_step_4&#45;&gt;longestPalindrome_dynamic_programming_step_5</title>
<path fill="none" stroke="black" d="M1835.99,-1270.58C1822.53,-1225.73 1801.41,-1155.36 1780,-1084.05"/>
<polygon fill="black" stroke="black" points="1783.37,-1083.09 1777.14,-1074.51 1776.66,-1085.1 1783.37,-1083.09"/>
</g>
<!-- longestPalindrome_dynamic_programming_step_5_error_off&#45;by&#45;one -->
<g id="node25" class="node">
<title>longestPalindrome_dynamic_programming_step_5_error_off&#45;by&#45;one</title>
<polygon fill="salmon" stroke="black" points="2165.43,-880.8 1845.62,-880.8 1845.62,-782.4 2165.43,-782.4 2165.43,-880.8"/>
<text text-anchor="middle" x="2005.53" y="-864.1" font-family="Arial" font-size="10.00">longestPalindrome_dynamic_programming_step_5_error_off&#45;by&#45;one</text>
<text text-anchor="middle" x="2005.53" y="-828.1" font-family="Arial" font-size="10.00">ERROR (Step 5)</text>
<text text-anchor="middle" x="2005.53" y="-804.1" font-family="Arial" font-size="10.00">Not considering all possible substrings while</text>
<text text-anchor="middle" x="2005.53" y="-792.1" font-family="Arial" font-size="10.00">finding the longest palindromic substring</text>
</g>
<!-- longestPalindrome_dynamic_programming_step_4&#45;&gt;longestPalindrome_dynamic_programming_step_5_error_off&#45;by&#45;one -->
<g id="edge20" class="edge">
<title>longestPalindrome_dynamic_programming_step_4&#45;&gt;longestPalindrome_dynamic_programming_step_5_error_off&#45;by&#45;one</title>
<path fill="none" stroke="black" d="M1865.95,-1270.58C1894.52,-1180.93 1955.58,-989.34 1986.59,-892"/>
<polygon fill="black" stroke="black" points="1989.88,-893.21 1989.58,-882.62 1983.21,-891.09 1989.88,-893.21"/>
</g>
<!-- longestPalindrome_dynamic_programming_step_2_variation_1_step_3 -->
<g id="node30" class="node">
<title>longestPalindrome_dynamic_programming_step_2_variation_1_step_3</title>
<polygon fill="lightyellow" stroke="black" points="2705.55,-1671.6 2371.5,-1671.6 2371.5,-1573.2 2705.55,-1573.2 2705.55,-1671.6"/>
<text text-anchor="middle" x="2538.53" y="-1654.9" font-family="Arial" font-size="10.00">longestPalindrome_dynamic_programming_step_2_variation_1_step_3</text>
<text text-anchor="middle" x="2538.53" y="-1618.9" font-family="Arial" font-size="10.00">Step 3</text>
<text text-anchor="middle" x="2538.53" y="-1594.9" font-family="Arial" font-size="10.00">Fill the 2D table `dp` by checking if the</text>
<text text-anchor="middle" x="2538.53" y="-1582.9" font-family="Arial" font-size="10.00">substring is a palindrome.</text>
</g>
<!-- longestPalindrome_dynamic_programming_step_2_variation_1_step_2&#45;&gt;longestPalindrome_dynamic_programming_step_2_variation_1_step_3 -->
<g id="edge30" class="edge">
<title>longestPalindrome_dynamic_programming_step_2_variation_1_step_2&#45;&gt;longestPalindrome_dynamic_programming_step_2_variation_1_step_3</title>
<path fill="none" stroke="black" d="M2538.53,-1725.38C2538.53,-1712.03 2538.53,-1697.39 2538.53,-1683.46"/>
<polygon fill="black" stroke="black" points="2542.03,-1683.5 2538.53,-1673.5 2535.03,-1683.5 2542.03,-1683.5"/>
</g>
<!-- longestPalindrome_dynamic_programming_step_2_variation_1_step_4 -->
<g id="node31" class="node">
<title>longestPalindrome_dynamic_programming_step_2_variation_1_step_4</title>
<polygon fill="lightyellow" stroke="black" points="2705.55,-1369.2 2371.5,-1369.2 2371.5,-1270.8 2705.55,-1270.8 2705.55,-1369.2"/>
<text text-anchor="middle" x="2538.53" y="-1352.5" font-family="Arial" font-size="10.00">longestPalindrome_dynamic_programming_step_2_variation_1_step_4</text>
<text text-anchor="middle" x="2538.53" y="-1316.5" font-family="Arial" font-size="10.00">Step 4</text>
<text text-anchor="middle" x="2538.53" y="-1292.5" font-family="Arial" font-size="10.00">Initialize variables to store the longest</text>
<text text-anchor="middle" x="2538.53" y="-1280.5" font-family="Arial" font-size="10.00">palindromic substring and its length.</text>
</g>
<!-- longestPalindrome_dynamic_programming_step_2_variation_1_step_3&#45;&gt;longestPalindrome_dynamic_programming_step_2_variation_1_step_4 -->
<g id="edge29" class="edge">
<title>longestPalindrome_dynamic_programming_step_2_variation_1_step_3&#45;&gt;longestPalindrome_dynamic_programming_step_2_variation_1_step_4</title>
<path fill="none" stroke="black" d="M2538.53,-1572.8C2538.53,-1520.45 2538.53,-1437.09 2538.53,-1380.77"/>
<polygon fill="black" stroke="black" points="2542.03,-1381.04 2538.53,-1371.04 2535.03,-1381.04 2542.03,-1381.04"/>
</g>
<!-- longestPalindrome_dynamic_programming_step_2_variation_1_step_5 -->
<g id="node32" class="node">
<title>longestPalindrome_dynamic_programming_step_2_variation_1_step_5</title>
<polygon fill="lightyellow" stroke="black" points="2705.55,-880.8 2371.5,-880.8 2371.5,-782.4 2705.55,-782.4 2705.55,-880.8"/>
<text text-anchor="middle" x="2538.53" y="-864.1" font-family="Arial" font-size="10.00">longestPalindrome_dynamic_programming_step_2_variation_1_step_5</text>
<text text-anchor="middle" x="2538.53" y="-828.1" font-family="Arial" font-size="10.00">Step 5</text>
<text text-anchor="middle" x="2538.53" y="-804.1" font-family="Arial" font-size="10.00">Traverse the 2D table `dp` to find the longest</text>
<text text-anchor="middle" x="2538.53" y="-792.1" font-family="Arial" font-size="10.00">palindromic substring.</text>
</g>
<!-- longestPalindrome_dynamic_programming_step_2_variation_1_step_4&#45;&gt;longestPalindrome_dynamic_programming_step_2_variation_1_step_5 -->
<g id="edge28" class="edge">
<title>longestPalindrome_dynamic_programming_step_2_variation_1_step_4&#45;&gt;longestPalindrome_dynamic_programming_step_2_variation_1_step_5</title>
<path fill="none" stroke="black" d="M2538.53,-1270.58C2538.53,-1181.11 2538.53,-990.12 2538.53,-892.6"/>
<polygon fill="black" stroke="black" points="2542.03,-892.69 2538.53,-882.69 2535.03,-892.69 2542.03,-892.69"/>
</g>
<!-- longestPalindrome_dynamic_programming_step_2_variation_1_step_6 -->
<g id="node33" class="node">
<title>longestPalindrome_dynamic_programming_step_2_variation_1_step_6</title>
<polygon fill="palegreen" stroke="black" points="2706.3,-554.4 2370.75,-554.4 2370.75,0 2706.3,0 2706.3,-554.4"/>
<text text-anchor="middle" x="2538.53" y="-537.7" font-family="Arial" font-size="10.00">longestPalindrome_dynamic_programming_step_2_variation_1_step_6</text>
<text text-anchor="middle" x="2538.53" y="-501.7" font-family="Arial" font-size="10.00">TERMINAL (Step 6)</text>
<text text-anchor="middle" x="2538.53" y="-477.7" font-family="Arial" font-size="10.00">Return the longest palindromic substring.</text>
<text text-anchor="middle" x="2538.53" y="-453.7" font-family="Arial" font-size="10.00">CODE:</text>
<text text-anchor="middle" x="2538.53" y="-441.7" font-family="Arial" font-size="10.00">class Solution:</text>
<text text-anchor="middle" x="2538.53" y="-429.7" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;def longestPalindrome(self, s: str) &#45;&gt; str:</text>
<text text-anchor="middle" x="2538.53" y="-417.7" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;n = len(s)</text>
<text text-anchor="middle" x="2538.53" y="-405.7" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;dp = [[False] * n for _ in range(n)]</text>
<text text-anchor="middle" x="2538.53" y="-393.7" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;</text>
<text text-anchor="middle" x="2538.53" y="-381.7" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;# Initialize all substrings with one character as palindromes</text>
<text text-anchor="middle" x="2538.53" y="-369.7" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;max_length = 1</text>
<text text-anchor="middle" x="2538.53" y="-357.7" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;start = 0</text>
<text text-anchor="middle" x="2538.53" y="-345.7" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;for i in range(n):</text>
<text text-anchor="middle" x="2538.53" y="-333.7" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;dp[i][i] = True</text>
<text text-anchor="middle" x="2538.53" y="-321.7" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;</text>
<text text-anchor="middle" x="2538.53" y="-309.7" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;# Fill the 2D table dp by checking if the substring is a palindrome</text>
<text text-anchor="middle" x="2538.53" y="-297.7" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;for i in range(n &#45; 1):</text>
<text text-anchor="middle" x="2538.53" y="-285.7" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if s[i] == s[i + 1]:</text>
<text text-anchor="middle" x="2538.53" y="-273.7" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;dp[i][i + 1] = True</text>
<text text-anchor="middle" x="2538.53" y="-261.7" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;start = i</text>
<text text-anchor="middle" x="2538.53" y="-249.7" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;max_length = 2</text>
<text text-anchor="middle" x="2538.53" y="-237.7" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;</text>
<text text-anchor="middle" x="2538.53" y="-225.7" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;# Fill the 2D table dp by checking if the substring is a palindrome</text>
<text text-anchor="middle" x="2538.53" y="-213.7" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;for length in range(3, n + 1):</text>
<text text-anchor="middle" x="2538.53" y="-201.7" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for i in range(n &#45; length + 1):</text>
<text text-anchor="middle" x="2538.53" y="-189.7" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;j = i + length &#45; 1</text>
<text text-anchor="middle" x="2538.53" y="-177.7" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if s[i] == s[j] and dp[i + 1][j &#45; 1]:</text>
<text text-anchor="middle" x="2538.53" y="-165.7" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;dp[i][j] = True</text>
<text text-anchor="middle" x="2538.53" y="-153.7" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if length &gt; max_length:</text>
<text text-anchor="middle" x="2538.53" y="-141.7" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;start = i</text>
<text text-anchor="middle" x="2538.53" y="-129.7" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;max_length = length</text>
<text text-anchor="middle" x="2538.53" y="-117.7" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;</text>
<text text-anchor="middle" x="2538.53" y="-105.7" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;# Return the longest palindromic substring</text>
<text text-anchor="middle" x="2538.53" y="-93.7" font-family="Arial" font-size="10.00"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;return s[start:start + max_length]</text>
<text text-anchor="middle" x="2538.53" y="-69.7" font-family="Arial" font-size="10.00">Time: O(n²)</text>
<text text-anchor="middle" x="2538.53" y="-57.7" font-family="Arial" font-size="10.00">Space: O(1)</text>
<text text-anchor="middle" x="2538.53" y="-45.7" font-family="Arial" font-size="10.00">Data structures: string</text>
<text text-anchor="middle" x="2538.53" y="-33.7" font-family="Arial" font-size="10.00">Concepts: iteration, conditional logic, return</text>
<text text-anchor="middle" x="2538.53" y="-21.7" font-family="Arial" font-size="10.00">values, comparison, slicing, object&#45;</text>
<text text-anchor="middle" x="2538.53" y="-9.7" font-family="Arial" font-size="10.00">oriented programming</text>
</g>
<!-- longestPalindrome_dynamic_programming_step_2_variation_1_step_5&#45;&gt;longestPalindrome_dynamic_programming_step_2_variation_1_step_6 -->
<g id="edge27" class="edge">
<title>longestPalindrome_dynamic_programming_step_2_variation_1_step_5&#45;&gt;longestPalindrome_dynamic_programming_step_2_variation_1_step_6</title>
<path fill="none" stroke="black" d="M2538.53,-782.06C2538.53,-732.05 2538.53,-649.78 2538.53,-566.08"/>
<polygon fill="black" stroke="black" points="2542.03,-566.32 2538.53,-556.32 2535.03,-566.32 2542.03,-566.32"/>
</g>
</g>
</svg>
